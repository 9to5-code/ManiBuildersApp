{"ast":null,"code":"import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nexport function getBaseUrl() {\n  return document.getElementsByTagName('base')[0].href;\n}\nconst providers = [{\n  provide: 'BASE_URL',\n  useFactory: getBaseUrl,\n  deps: []\n}];\nif (environment.production) {\n  enableProdMode();\n}\nplatformBrowserDynamic(providers).bootstrapModule(AppModule).catch(err => console.log(err));","map":{"version":3,"names":["enableProdMode","platformBrowserDynamic","AppModule","environment","getBaseUrl","document","getElementsByTagName","href","providers","provide","useFactory","deps","production","bootstrapModule","catch","err","console","log"],"sources":["/Users/lakshmiprashanthm/Documents/Construction App/SignUpApp/ClientApp/src/main.ts"],"sourcesContent":["import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,eAAe;AAC9C,SAASC,sBAAsB,QAAQ,mCAAmC;AAE1E,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,4BAA4B;AAExD,OAAM,SAAUC,UAAUA,CAAA;EACxB,OAAOC,QAAQ,CAACC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI;AACtD;AAEA,MAAMC,SAAS,GAAG,CAChB;EAAEC,OAAO,EAAE,UAAU;EAAEC,UAAU,EAAEN,UAAU;EAAEO,IAAI,EAAE;AAAE,CAAE,CAC1D;AAED,IAAIR,WAAW,CAACS,UAAU,EAAE;EAC1BZ,cAAc,EAAE;AAClB;AAEAC,sBAAsB,CAACO,SAAS,CAAC,CAACK,eAAe,CAACX,SAAS,CAAC,CACzDY,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}